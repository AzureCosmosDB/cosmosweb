@inject Microsoft.ApplicationInsights.AspNetCore.JavaScriptSnippet JavaScriptSnippet
@inject cosmosweb.Services.UHFService UHFService;
@inject cosmosweb.Services.CookieConsentService CookieConsentService;
@inject cosmosweb.Services.SitemapService SiteMapService;
@{
    var uhfShell = UHFService.Load(Context);
    var showShell = ViewData["ShowShell"] == null || (bool)ViewData["ShowShell"];
}

<!DOCTYPE html>
<html lang="en">
<head>

    <title>@ViewData["Title"]</title>
    <meta name="description" content="@ViewData["Description"]" />

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    @if (IsSectionDefined("meta"))
    {
        @RenderSection("meta", required: false);
    }

    @if (showShell)
    {
        @uhfShell.CssIncludes
    }

    @if (IsSectionDefined("styles"))
    {
        @RenderSection("styles", required: false);
    }

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap-custom.css" asp-append-version="true" environmental="true" />

    <link rel="canonical" href="@Html.Raw($"{SiteMapService.LiveSiteBaseUrl}{ViewData["CanonicalPath"] ?? Context.Request.Path}")" />

    <script>
            @{ /* If consent is required, an event handler is registered in site.js to load GoogleAnalytics.
                  We don't do it here because we don't want to load jquery and cookie consent scripts in <head>. We can't just move all this
                  to site.js because GoogleOptimize requires the script at the start of <head>. */ }
            @if (!CookieConsentService.IsConsentRequired(Context))
            {
                //@:LoadAnalytics(true);
            }

            function LoadAnalytics(loadGoogleOptimize)
            {
               
                var appInsights = window.appInsights || function (config) {
                    function i(config) { t[config] = function () { var i = arguments; t.queue.push(function () { t[config].apply(t, i) }) } } var t = { config: config }, u = document, e = window, o = "script", s = "AuthenticatedUserContext", h = "start", c = "stop", l = "Track", a = l + "Event", v = l + "Page", y = u.createElement(o), r, f; y.src = config.url || "https://az416426.vo.msecnd.net/scripts/a/ai.0.js"; u.getElementsByTagName(o)[0].parentNode.appendChild(y); try { t.cookie = u.cookie } catch (p) { } for (t.queue = [], t.version = "1.0", r = ["Event", "Exception", "Metric", "PageView", "Trace", "Dependency"]; r.length;)i("track" + r.pop()); return i("set" + s), i("clear" + s), i(h + a), i(c + a), i(h + v), i(c + v), i("flush"), config.disableExceptionTracking || (r = "onerror", i("_" + r), f = e[r], e[r] = function (config, i, u, e, o) { var s = f && f(config, i, u, e, o); return s !== !0 && t["_" + r](config, i, u, e, o), s }), t
                }({
                    instrumentationKey: '@Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration.Active.InstrumentationKey'
                });

                window.appInsights = appInsights;
                appInsights.trackPageView();
            }
    </script>
    @Html.Raw(JavaScriptSnippet.FullScript)
</head>
<body class='@ViewData["BodyCssClass"]'>

    @if (showShell)
    {
        <div id="uhf-header-wrapper">
            <div id="uhf-header" data-spy="affix" data-offset-top="1">
                @uhfShell.HeaderHtml                                            
            </div>
        </div>
        <div class="jumbotron">
            @{ await Html.RenderPartialAsync("_Alerts"); }
            <div class="container">
                @RenderSection("header")
            </div>
            <partial name="_LoginPartial" />
        </div>
    }

    @RenderBody()

    @if (showShell)
    {
        @uhfShell.FooterHtml
    }

    <script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.1.4.min.js"
            asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
            asp-fallback-test="window.jQuery">
    </script>

    @if (showShell)
    {
        @uhfShell.JavaScriptIncludes
    }

    <script src="~/lib/bootstrap/dist/js/bootstrap.js" asp-append-version="true" environmental="true"></script>
    <script src="~/bundles/js/common.js" asp-append-version="true" environmental="true"></script>

    @if (IsSectionDefined("scripts"))
    {
        @RenderSection("scripts", required: false);
    }
</body>
</html>
