@{ ViewData["Title"] = "Azure Cosmos DB Conf";
    ViewData["Description"] = "Azure Cosmos DB Conf is a free online event.";

    var swimLaneHelper = new cosmosweb.Helpers.SwimLaneHelper(); }

@section header {
    <h1>Azure Cosmos DB Conf</h1>
}

@{ 
    DateTime currentDateTime = DateTime.Now; //UTC
    DateTime showStartDateTime = new DateTime(2021, 04, 20, 15, 45, 00); //UTC
    DateTime showEndDateTime = new DateTime(2021, 04, 21, 12, 00, 00);
    int goLive = DateTime.Compare(currentDateTime, showStartDateTime);
    int goOffAir = DateTime.Compare(showEndDateTime, currentDateTime);
    string showState = "preshow";

    if (goLive < 0) //Current Date less than Go Live
        showState = "preshow";
    else if (goOffAir < 0)
        showState = "offair";
    else
        showState = "onair"; }


<div class="@swimLaneHelper.GetSwimLaneCssClass(includeDefaultPadding: false)">
    <div class="container">
        <div class="row">
            <div class="col-sm-2"></div>
            <div class="col-sm-08">
                <span>
                    <a href="~/conf/livestream" target="_self" class="btn btn-default">Live</a>
                    <a href="~/conf/ondemand" target="_self" class="btn btn-default">On-Demand</a>
                    <a href="~/conf/speakers" target="_self" class="btn btn-default">Speakers</a>
                </span>
            </div>
            <div class="col-sm-2"></div>
        </div>

        @{ if (showState == "preshow")
                await Html.RenderPartialAsync("preshow");
            else if (showState == "onair")
                await Html.RenderPartialAsync("onair");
            else if (showState == "offair")
                await Html.RenderPartialAsync("offair");
        }
    </div>
    
</div>

@section scripts {
    <script src="~/lib/jquery.countdown/jquery.countdown.js"></script>

    <script>
        /* ---------------------------------------------------------
         * Countdown
         */

        var description = {
            weeks: "weeks",
            days: "days",
            hours: "hours",
            minutes: "minutes"
        };

        // year/month/day
        // target date is read from Configuration - by default, can be set in appsettings.json, command line, environment variable etc., due to the use of CreateDefaultBuilder in Program.cs (see https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-5.0#default-configuration)
        $('#countdown').countdown('2021/4/20 16:00', function (event) {
            $(this).html(event.strftime(
                '<div><b>%w</b> <span>' + description.weeks + '&nbsp;</span>' +
                '<b>%d</b> <span>' + description.days + '&nbsp;</span>' +
                '<b>%H</b> <span>' + description.hours + '&nbsp;</span>' +
                '<b>%M</b> <span>' + description.minutes + '&nbsp;</span>'
            ));
        });
    </script>
}

@{ await Html.RenderPartialAsync("_TryCosmos"); }

<script type="text/javascript" src="https://addevent.com/libs/atc/1.6.1/atc.min.js" async defer></script>